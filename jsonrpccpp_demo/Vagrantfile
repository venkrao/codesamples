# -*- mode: ruby -*-
# vi: set ft=ruby :

groups = {
  "webservers" => ["webserver1", "webserver2"],
  "loadbalancers" => ["ld"],
  "all_groups:children" => ["webservers", "loadbalancers"]
}

Vagrant.configure("2") do |config|

  config.vm.network "private_network", type: "dhcp"

  config.vm.define "webserver1" do |webserver1|
    webserver1.vm.box = "centos/7"
    webserver1.vm.hostname = "webserver1"

    webserver1.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/misc_packages.yml"
    end

    webserver1.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/httpd.yml"
    end

    webserver1.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/redis.yml"
    end

    webserver1.vm.provision "shell", path: "scripts/compile_install_jsonrpccpp.sh"
    webserver1.vm.provision "file", source: "webapp/jsonrpccpp.php", destination: "/var/www/html/jsonrpccpp.php"
  end


  config.vm.define "webserver2" do |webserver2|
    webserver2.vm.box = "centos/7"
    webserver2.vm.hostname = "webserver2"

    webserver2.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/misc_packages.yml"
    end

    webserver2.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/httpd.yml"
    end

    webserver2.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/redis.yml"
    end


    webserver2.vm.provision "shell", path: "scripts/compile_install_jsonrpccpp.sh"
    webserver2.vm.provision "file", source: "webapp/jsonrpccpp.php", destination: "/var/www/html/jsonrpccpp.php"
  end


  config.vm.define "lb" do |lb|
    lb.vm.box = "centos/7"
    lb.vm.hostname = "webserver2"

    lb.vm.network "forwarded_port", guest: 5000, host: 8080

    lb.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/haproxy.yml"
    end

  end

end
